{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\SPNU_PROJECT\\\\SPNU\\\\frontend\\\\src\\\\components\\\\board\\\\incontent\\\\notice\\\\Notice_detail.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NoticeDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderBoard = () => {\n      // const Boards = this.state.Boards.map(Board => {\n      //     return( \n      //     <div key={Board.id}> \n      //     <h1>{Board.title}</h1>\n      //     <span>{Board.author}</span>\n      //     <span>{Board.text}</span>\n      //     <span>{Board.created_date}</span>\n      //     <span>{Board.hits}</span>\n      //     </div>)\n      // })\n      // return Boards\n      const Boards = this.state.Boards;\n      const Board_id = Boards.id;\n      const Board_title = Boards.title;\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Board_id\") // <div key={Boards.id}> \n      // <h1>{Boards.title}</h1>\n      // <span>{Boards.author}</span>\n      // <span>{Boards.text}</span>\n      // <span>{Boards.created_date}</span>\n      // <span>{Boards.hits}</span>\n      ;\n    };\n\n    this._getBoards = async () => {\n      //function 앞에 async를 붙이면 promise객체를 불러오고 .then을 써서 불러올 때 까지 기다려준다는 느낌?!\n      //await은 promise가 resolve되서 돌아올 때 까지 기다려주는(다음 줄로 넘어가지 않는 친구!!) => 비동기지만 동기처럼 쓸 수 있슴다\n      const Boards = await axios // const board_id = match.params.id\n      .get('http://127.0.0.1:8000/SPNU_notice/25/').then(({\n        data\n      }) => {\n        console.log(data);\n        this.setState({\n          Boards: data\n        });\n        console.log(this.state.Boards);\n      }).catch(err => {});\n      console.log(Boards);\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    this._getBoards();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" hello world2 \"), this.state.Boards ? this._renderBoard() : \"loading\");\n  }\n\n}\n\nexport default NoticeDetail;","map":{"version":3,"sources":["C:\\Users\\82106\\Desktop\\SPNU_PROJECT\\SPNU\\frontend\\src\\components\\board\\incontent\\notice\\Notice_detail.jsx"],"names":["React","Component","axios","NoticeDetail","constructor","props","_renderBoard","Boards","state","Board_id","id","Board_title","title","_getBoards","get","then","data","console","log","setState","catch","err","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,YAXmB,GAWJ,MAAM;AACjB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAA1B;AACA,YAAME,QAAQ,GAAGF,MAAM,CAACG,EAAxB;AACA,YAAMC,WAAW,GAAGJ,MAAM,CAACK,KAA3B;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AAPJ;AASH,KApCkB;;AAAA,SAuCnBC,UAvCmB,GAuCN,YAAY;AACrB;AACA;AACA,YAAMN,MAAM,GAAG,MAAML,KAAK,CAC1B;AAD0B,OAGzBY,GAHoB,CAGhB,uCAHgB,EAIpBC,IAJoB,CAIf,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAa;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,QAAL,CACE;AAAEZ,UAAAA,MAAM,EAAGS;AAAX,SADF;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWD,MAAvB;AAED,OAXkB,EAYpBa,KAZoB,CAYbC,GAAD,IAAQ,CAAE,CAZI,CAArB;AAaAJ,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAED,KAzDgB;;AAGf,SAAKC,KAAL,GAAa,EAAb;AACH;;AAED,QAAMc,iBAAN,GAAyB;AACrB,SAAKT,UAAL;AAEH;;AAmDDU,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEK,KAAKf,KAAL,CAAWD,MAAX,GAAoB,KAAKD,YAAL,EAApB,GAA0C,SAF/C,CADJ;AAMH;;AArEgC;;AA0ErC,eAAeH,YAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass NoticeDetail extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {};\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this._getBoards();\r\n        \r\n    }\r\n\r\n    _renderBoard = () => {\r\n        // const Boards = this.state.Boards.map(Board => {\r\n        //     return( \r\n\r\n        //     <div key={Board.id}> \r\n        //     <h1>{Board.title}</h1>\r\n        //     <span>{Board.author}</span>\r\n        //     <span>{Board.text}</span>\r\n        //     <span>{Board.created_date}</span>\r\n        //     <span>{Board.hits}</span>\r\n        //     </div>)\r\n        // })\r\n        // return Boards\r\n        const Boards = this.state.Boards;\r\n        const Board_id = Boards.id\r\n        const Board_title = Boards.title\r\n        return(\r\n            <h1>Board_id</h1>\r\n            // <div key={Boards.id}> \r\n            // <h1>{Boards.title}</h1>\r\n            // <span>{Boards.author}</span>\r\n            // <span>{Boards.text}</span>\r\n            // <span>{Boards.created_date}</span>\r\n            // <span>{Boards.hits}</span>\r\n        )\r\n    }\r\n\r\n\r\n    _getBoards = async () => {\r\n        //function 앞에 async를 붙이면 promise객체를 불러오고 .then을 써서 불러올 때 까지 기다려준다는 느낌?!\r\n        //await은 promise가 resolve되서 돌아올 때 까지 기다려주는(다음 줄로 넘어가지 않는 친구!!) => 비동기지만 동기처럼 쓸 수 있슴다\r\n        const Boards = await axios\r\n        // const board_id = match.params.id\r\n\r\n        .get('http://127.0.0.1:8000/SPNU_notice/25/')\r\n        .then(({ data })=> {\r\n            console.log(data);\r\n            this.setState(\r\n              { Boards : data }\r\n            );\r\n            console.log(this.state.Boards)\r\n            \r\n          })\r\n        .catch((err)=> {})\r\n        console.log(Boards)\r\n        \r\n      }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1> hello world2 </h1>\r\n                {this.state.Boards ? this._renderBoard() : \"loading\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default NoticeDetail;"]},"metadata":{},"sourceType":"module"}