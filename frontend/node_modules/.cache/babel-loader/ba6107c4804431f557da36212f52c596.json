{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\SPNU_PROJECT\\\\SPNU\\\\frontend\\\\src\\\\components\\\\board\\\\incontent\\\\notice\\\\Notice.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport NoticeDetail from './Notice_detail';\n\nclass Notice extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderBoard = () => {\n      const Boards = this.state.Boards.map(Board => {\n        return React.createElement(\"div\", {\n          key: Board.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, Board.title), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, Board.author), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, Board.text), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, Board.created_date), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, Board.hits));\n      });\n      return Boards;\n    };\n\n    this._getBoards = async () => {\n      //function 앞에 async를 붙이면 promise객체를 불러오고 .then을 써서 불러올 때 까지 기다려준다는 느낌?!\n      //await은 promise가 resolve되서 돌아올 때 까지 기다려주는(다음 줄로 넘어가지 않는 친구!!) => 비동기지만 동기처럼 쓸 수 있슴다\n      const Boards = await axios.get('http://127.0.0.1:8000/SPNU_notice/').then(({\n        data\n      }) => {\n        console.log(data.results);\n        this.setState({\n          Boards: data.results\n        });\n      }).catch(err => {});\n      console.log(Boards);\n      const BoardsForId = this.state.Boards.map(Board => {\n        return React.createElement(NoticeDetail, {\n          id: Board.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      });\n      console.log(BoardsForId);\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    this._getBoards();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" hello world \"), this.state.Boards ? this._renderBoard() : \"loading\");\n  }\n\n}\n\nexport default Notice;","map":{"version":3,"sources":["C:\\Users\\82106\\Desktop\\SPNU_PROJECT\\SPNU\\frontend\\src\\components\\board\\incontent\\notice\\Notice.jsx"],"names":["React","Component","axios","NoticeDetail","Notice","constructor","props","_renderBoard","Boards","state","map","Board","id","title","author","text","created_date","hits","_getBoards","get","then","data","console","log","results","setState","catch","err","BoardsForId","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAIA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAE3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,YAVmB,GAUJ,MAAM;AACjB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,GAAlB,CAAsBC,KAAK,IAAI;AAC1C,eAEA;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,KAAK,CAACE,KAAX,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOF,KAAK,CAACG,MAAb,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOH,KAAK,CAACI,IAAb,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOJ,KAAK,CAACK,YAAb,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOL,KAAK,CAACM,IAAb,CALA,CAFA;AAWH,OAZc,CAAf;AAaA,aAAOT,MAAP;AAEH,KA1BkB;;AAAA,SA6BnBU,UA7BmB,GA6BN,YAAY;AACrB;AACA;AACA,YAAMV,MAAM,GAAG,MAAMN,KAAK,CACzBiB,GADoB,CAChB,oCADgB,EAEpBC,IAFoB,CAEf,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAa;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACA,aAAKC,QAAL,CACE;AAAEjB,UAAAA,MAAM,EAAGa,IAAI,CAACG;AAAhB,SADF;AAID,OARkB,EASpBE,KAToB,CASbC,GAAD,IAAQ,CAAE,CATI,CAArB;AAUAL,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AAEA,YAAMoB,WAAW,GAAE,KAAKnB,KAAL,CAAWD,MAAX,CAAkBE,GAAlB,CAAsBC,KAAK,IAAI;AAC9C,eAEI,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAEA,KAAK,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH,OAPkB,CAAnB;AAQAU,MAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AAED,KAtDgB;;AAGf,SAAKnB,KAAL,GAAa,EAAb;AACH;;AAED,QAAMoB,iBAAN,GAAyB;AACrB,SAAKX,UAAL;AACH;;AAiDDY,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEK,KAAKrB,KAAL,CAAWD,MAAX,GAAoB,KAAKD,YAAL,EAApB,GAA0C,SAF/C,CADJ;AAOH;;AAnE0B;;AAwE/B,eAAeH,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport NoticeDetail from './Notice_detail';\n\n\n\nclass Notice extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {};\n    }\n\n    async componentDidMount(){\n        this._getBoards();   \n    }\n\n    _renderBoard = () => {\n        const Boards = this.state.Boards.map(Board => {\n            return( \n\n            <div key={Board.id}> \n            <h1>{Board.title}</h1>\n            <span>{Board.author}</span>\n            <span>{Board.text}</span>\n            <span>{Board.created_date}</span>\n            <span>{Board.hits}</span>\n\n            </div>\n            )\n        })\n        return Boards\n\n    }\n\n\n    _getBoards = async () => {\n        //function 앞에 async를 붙이면 promise객체를 불러오고 .then을 써서 불러올 때 까지 기다려준다는 느낌?!\n        //await은 promise가 resolve되서 돌아올 때 까지 기다려주는(다음 줄로 넘어가지 않는 친구!!) => 비동기지만 동기처럼 쓸 수 있슴다\n        const Boards = await axios\n        .get('http://127.0.0.1:8000/SPNU_notice/')\n        .then(({ data })=> {\n            console.log(data.results);\n            this.setState(\n              { Boards : data.results }\n            );\n            \n          })\n        .catch((err)=> {})\n        console.log(Boards)\n\n        const BoardsForId =this.state.Boards.map(Board => {\n            return(\n\n                <NoticeDetail id={Board.id} />\n\n            )\n            \n        })\n        console.log(BoardsForId)\n        \n      }\n\n\n    render(){\n        return(\n            <div>\n                <h1> hello world </h1>\n                {this.state.Boards ? this._renderBoard() : \"loading\"}\n                \n            </div>\n        )\n    }\n\n\n}\n\nexport default Notice;"]},"metadata":{},"sourceType":"module"}