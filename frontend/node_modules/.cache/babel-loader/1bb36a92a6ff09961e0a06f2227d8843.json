{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\SPNU_PROJECT\\\\SPNU\\\\frontend\\\\src\\\\components\\\\board\\\\incontent\\\\notice\\\\NoticePost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NoticePost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      alert(\"isGoing : \" + this.state.isGoing + \" and \" + \"numberOfGuest :\" + this.state.numberOfGuests);\n      event.preventDefault(); //이걸 써주면 submit후에도 초기화 방지!(렌더링 시키지 않고 유지한다ㅇ)\n    };\n\n    this.state = {\n      title: \"\",\n      text: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    //다중 제어의 포인트! \n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value; //타입이 chectbox면 체크하고 아니면 밸류로 넣어라!\n\n    const name = target.name;\n    this.setState({\n      [name]: value //computed property name <= 속성명으로 들어감\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Is going:\", React.createElement(\"input\", {\n      name: \"isGoing\",\n      type: \"checkbox\",\n      checked: this.state.isGoing,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Number of guests:\", React.createElement(\"input\", {\n      name: \"numberOfGuests\",\n      type: \"number\",\n      value: this.state.numberOfGuests,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NoticePost;","map":{"version":3,"sources":["C:\\Users\\82106\\Desktop\\SPNU_PROJECT\\SPNU\\frontend\\src\\components\\board\\incontent\\notice\\NoticePost.jsx"],"names":["React","Component","axios","NoticePost","constructor","props","handleSubmit","event","alert","state","isGoing","numberOfGuests","preventDefault","title","text","handleInputChange","bind","target","value","type","checked","name","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAE/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBjBC,YArBiB,GAqBDC,KAAD,IAAY;AACzBC,MAAAA,KAAK,CAAC,eAAc,KAAKC,KAAL,CAAWC,OAAzB,GAAkC,OAAlC,GAA2C,iBAA3C,GAA+D,KAAKD,KAAL,CAAWE,cAA3E,CAAL;AACAJ,MAAAA,KAAK,CAACK,cAAN,GAFyB,CAED;AAC3B,KAxBkB;;AAEf,SAAKH,KAAL,GAAa;AACXI,MAAAA,KAAK,EAAG,EADG;AAEXC,MAAAA,IAAI,EAAG;AAFI,KAAb;AAKA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKV,YAAL,GAAmB,KAAKA,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAAnB;AACD;;AAEDD,EAAAA,iBAAiB,CAACR,KAAD,EAAQ;AAAK;AAC5B,UAAMU,MAAM,GAAGV,KAAK,CAACU,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE,CAFuB,CAEmD;;AAC1E,UAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AAEA,SAAKC,QAAL,CAAc;AACZ,OAACD,IAAD,GAAQH,KADI,CACE;;AADF,KAAd;AAGD;;AAMDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKjB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWC,OAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKK,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AACE,MAAA,IAAI,EAAC,gBADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,cAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKI,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,CADF;AAqBD;;AAjD4B;;AAmDnC,eAAeZ,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass NoticePost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          title : \"\",\r\n          text : \"\"\r\n        };\r\n    \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleInputChange(event) {    //다중 제어의 포인트! \r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value; //타입이 chectbox면 체크하고 아니면 밸류로 넣어라!\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value //computed property name <= 속성명으로 들어감\r\n        });\r\n      }\r\n      \r\n      handleSubmit = (event) =>  {\r\n        alert(\"isGoing : \"+ this.state.isGoing +\" and \"+ \"numberOfGuest :\" + this.state.numberOfGuests);\r\n        event.preventDefault(); //이걸 써주면 submit후에도 초기화 방지!(렌더링 시키지 않고 유지한다ㅇ)\r\n    }\r\n      render() {\r\n        return (\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Is going:\r\n              <input\r\n                name=\"isGoing\"\r\n                type=\"checkbox\"\r\n                checked={this.state.isGoing}\r\n                onChange={this.handleInputChange} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Number of guests:\r\n              <input\r\n                name=\"numberOfGuests\"\r\n                type=\"number\"\r\n                value={this.state.numberOfGuests}\r\n                onChange={this.handleInputChange} />\r\n            </label>\r\n          </form>\r\n        );\r\n      }}\r\n\r\nexport default NoticePost;"]},"metadata":{},"sourceType":"module"}