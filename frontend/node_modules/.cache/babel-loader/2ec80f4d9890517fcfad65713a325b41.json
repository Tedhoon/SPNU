{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\SPNU_PROJECT\\\\SPNU\\\\frontend\\\\src\\\\components\\\\board\\\\incontent\\\\notice\\\\NoticePost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NoticePost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      // axios.post('http://127.0.0.1:8000/SPNU_notice', this.state)\n      // .then((response) => {\n      //     let {posts} = this.state\n      //     console.log(posts)\n      //     posts.push(response.data);\n      //     this.setState({posts});\n      // })\n      // .catch((err)=> {console.log(err)})\n      alert(this.state.title + this.state.text);\n      event.preventDefault(); //이걸 써주면 submit후에도 초기화 방지!(렌더링 시키지 않고 유지한다ㅇ)\n    };\n\n    this.state = {\n      title: \"\",\n      text: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    //다중 제어의 포인트! \n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"title :\", React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"text :\", React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      value: this.state.text,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default NoticePost;","map":{"version":3,"sources":["C:\\Users\\82106\\Desktop\\SPNU_PROJECT\\SPNU\\frontend\\src\\components\\board\\incontent\\notice\\NoticePost.jsx"],"names":["React","Component","axios","NoticePost","constructor","props","handleSubmit","event","alert","state","title","text","preventDefault","handleInputChange","bind","target","value","name","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAE/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBjBC,YArBiB,GAqBDC,KAAD,IAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,MAAAA,KAAK,CAAC,KAAKC,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,IAA/B,CAAL;AACAJ,MAAAA,KAAK,CAACK,cAAN,GAXyB,CAWD;AAC3B,KAjCkB;;AAEf,SAAKH,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG,EADG;AAEXC,MAAAA,IAAI,EAAG;AAFI,KAAb;AAKA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKR,YAAL,GAAmB,KAAKA,YAAL,CAAkBQ,IAAlB,CAAuB,IAAvB,CAAnB;AACD;;AAEDD,EAAAA,iBAAiB,CAACN,KAAD,EAAQ;AAAK;AAC5B,UAAMQ,MAAM,GAAGR,KAAK,CAACQ,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AAEA,SAAKC,QAAL,CAAc;AACZ,OAACD,IAAD,GAAQD;AADI,KAAd;AAGD;;AAeDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,KAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKG,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,IAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKE,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,EAkBI;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,KAAKP,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CADF;AAwBD;;AA7D4B;;AA+DnC,eAAeH,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass NoticePost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          title : \"\",\r\n          text : \"\"\r\n        };\r\n    \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleInputChange(event) {    //다중 제어의 포인트! \r\n        const target = event.target;\r\n        const value = target.value; \r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value \r\n        });\r\n      }\r\n      \r\n      handleSubmit = (event) =>  {\r\n        // axios.post('http://127.0.0.1:8000/SPNU_notice', this.state)\r\n        // .then((response) => {\r\n        //     let {posts} = this.state\r\n        //     console.log(posts)\r\n        //     posts.push(response.data);\r\n        //     this.setState({posts});\r\n        // })\r\n        // .catch((err)=> {console.log(err)})\r\n        \r\n        alert(this.state.title + this.state.text)\r\n        event.preventDefault(); //이걸 써주면 submit후에도 초기화 방지!(렌더링 시키지 않고 유지한다ㅇ)\r\n    }\r\n      render() {\r\n        return (\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              title :\r\n              <input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                value={this.state.title}\r\n                onChange={this.handleInputChange} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              text :\r\n              <input\r\n                name=\"text\"\r\n                type=\"text\"\r\n                value={this.state.text}\r\n                onChange={this.handleInputChange} />\r\n            </label>\r\n              <input\r\n                type=\"submit\" \r\n                onSubmit={this.handleSubmit} />\r\n          </form>\r\n        );\r\n      }}\r\n\r\nexport default NoticePost;"]},"metadata":{},"sourceType":"module"}